@page "/sections"

@using Apex.GameZone.UI.Models
@using Apex.GameZone.UI.Services.SectionServices

@inject ISectionService _sectionService;

<RadzenDataGrid @ref="sectionsGrid" AllowPaging="true" PageSize="10" AllowSorting="true"
                Data="@sections" TItem="SectionModel">
    <Columns>
        <RadzenDataGridColumn Width="50px" TItem="SectionModel" Title="#" Filterable="false" Sortable="false" TextAlign="TextAlign.Center">
            <Template Context="data">
                @(sections.IndexOf(data) + 1)
            </Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="SectionModel" Property="IsBusy" Title="Status">
            <Template Context="section">
                @if (section.IsBusy)
                {
                    <RadzenIcon Icon="sports_esports" IconStyle="IconStyle.Success" />
                }
                else
                {
                    <RadzenIcon Icon="videogame_asset_off" IconStyle="IconStyle.Danger" />
                }
            </Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="SectionModel" Property="Name" Title="Name" />

        <RadzenDataGridColumn TItem="SectionModel" Property="Description" Title="Description" />

        <RadzenDataGridColumn TItem="SectionModel" Property="Type" Title="Type" />

        <RadzenDataGridColumn TItem="SectionModel" Property="PricePerHour" Title="PricePerHour" />

        <RadzenDataGridColumn TItem="SectionModel" Title="IsVip" Property="IsVip" />

    </Columns>
</RadzenDataGrid>


@code {
    RadzenDataGrid<SectionModel> sectionsGrid;
    IList<SectionModel> sections;

    protected override async Task OnInitializedAsync()
    {
        sections = await _sectionService.GetAllSectionsByGameZoneId(4);
    }

    void NavigateToSections(SectionModel args)
    {
        //_navManager.NavigateTo($"/gamezone/{args.Id}");
    }



}