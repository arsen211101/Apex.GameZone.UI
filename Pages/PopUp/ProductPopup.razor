@using Apex.GameZone.UI.Models.CheckoutModel;
@using Apex.GameZone.UI.Models;
@using Apex.GameZone.UI.Services.ProductServices;
@using Microsoft.AspNetCore.Components

@inject IProductService _productService;

<RadzenDropDown @bind-Value=@model.ProductId Change="@QuantityCheck" Data=@products TextProperty="Name" ValueProperty="Id" Style="width: 100%; max-width: 400px;" />
<RadzenNumeric Min="1" Max="@maxQuantity" @bind-Value=@model.Quantity />
<RadzenButton Click=@(args => OnManageSubscriptionSubmit()) Variant="Variant.Outlined">Save</RadzenButton>

@code {
    [Parameter]
    public EventCallback<ProductCheckoutModel> SubscriptionStateChanged { get; set; }

    private ProductCheckoutModel model = new();
    List<ProductModel> products = new();

    int maxQuantity = 1;

    private async Task OnManageSubscriptionSubmit()
    {
        await SubscriptionStateChanged.InvokeAsync(model);
    }

    private void QuantityCheck()
    {
        maxQuantity = products.FirstOrDefault(x => x.Id == model.ProductId).Quantity;
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        
        // To Do
        // exclude 0 quanitty products
        products = await _productService.GetAllProductsByGameZoneId(4);
    }
}
 