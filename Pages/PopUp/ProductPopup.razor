@using Apex.GameZone.UI.Models.CheckoutModel;
@using Apex.GameZone.UI.Models;
@using Apex.GameZone.UI.Services.ProductServices;
@using Microsoft.AspNetCore.Components

@inject IProductService _productService;

<RadzenDropDown @bind-Value=@model.ProductId Data=@products ValueProperty="Name" Style="width: 100%; max-width: 400px;" />
<RadzenNumeric Min="1" Max="10" @bind-Value=@model.Quantity />
<RadzenButton Click=@(args => OnManageSubscriptionSubmit()) Variant="Variant.Outlined">Save</RadzenButton>

@code {
    [Parameter]
    public EventCallback<ProductCheckoutModel> SubscriptionStateChanged { get; set; }

    private ProductCheckoutModel model = new();
    private Dictionary<int,string> products = new();
    private async Task OnManageSubscriptionSubmit()
    {
        await SubscriptionStateChanged.InvokeAsync(model);
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
       var productList = await _productService.GetAllProductsByGameZoneId(4);
       //products= productList.Select(x=>x.Id)
    }
}
